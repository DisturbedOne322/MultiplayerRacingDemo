//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Input/PlayerNetworkInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerNetworkInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerNetworkInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerNetworkInputActions"",
    ""maps"": [
        {
            ""name"": ""Players"",
            ""id"": ""3f67c974-f6cb-4ce3-9145-62088bcdb2dd"",
            ""actions"": [
                {
                    ""name"": ""GasInput"",
                    ""type"": ""Value"",
                    ""id"": ""78b48838-8ad7-4d22-9010-2b5dc59b1c59"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BrakeInput"",
                    ""type"": ""Value"",
                    ""id"": ""88a7b0db-9fd9-4b89-a6a8-be2d01b06cb7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HandbrakeInput"",
                    ""type"": ""Button"",
                    ""id"": ""4a3c4f56-3e2e-4d59-890f-e98fd9a9c3a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NitroInput"",
                    ""type"": ""Button"",
                    ""id"": ""0465fb63-c7dc-43a1-8919-7ba44ef2b495"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HorizontalInput"",
                    ""type"": ""Value"",
                    ""id"": ""5f039435-c361-4f15-a991-d5a9be354c48"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a835a9fe-7a44-44a9-aedb-68816b841221"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GasInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a7d925c-efa5-42e2-87d0-2116c671dea4"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GasInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df0c7f62-02ac-4daf-be9a-50c3104f7f81"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BrakeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6866d562-001c-4652-8c1e-b1bf3a50eef1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BrakeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40f21e4b-4e7c-467d-945e-5c806bac9a9d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HandbrakeInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15cbffe9-ddd2-4c2c-ba18-32cdeda493b7"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NitroInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb386ae8-547d-418f-add0-5a0fac85237b"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NitroInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""5bc341b4-5a8d-404d-8593-1068a92aebac"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalInput"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a2a6268c-2547-4493-bd52-b27e940cdc89"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b54def31-369e-4281-a3ea-d48a7134155e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""0eb2af90-1598-486a-9db5-54fac6bb4f84"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalInput"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d8fde936-57b0-44ee-926a-6ab8f83f087c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""587e682b-be17-44ad-adb8-20fe99673bf6"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Players
        m_Players = asset.FindActionMap("Players", throwIfNotFound: true);
        m_Players_GasInput = m_Players.FindAction("GasInput", throwIfNotFound: true);
        m_Players_BrakeInput = m_Players.FindAction("BrakeInput", throwIfNotFound: true);
        m_Players_HandbrakeInput = m_Players.FindAction("HandbrakeInput", throwIfNotFound: true);
        m_Players_NitroInput = m_Players.FindAction("NitroInput", throwIfNotFound: true);
        m_Players_HorizontalInput = m_Players.FindAction("HorizontalInput", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Players
    private readonly InputActionMap m_Players;
    private List<IPlayersActions> m_PlayersActionsCallbackInterfaces = new List<IPlayersActions>();
    private readonly InputAction m_Players_GasInput;
    private readonly InputAction m_Players_BrakeInput;
    private readonly InputAction m_Players_HandbrakeInput;
    private readonly InputAction m_Players_NitroInput;
    private readonly InputAction m_Players_HorizontalInput;
    public struct PlayersActions
    {
        private @PlayerNetworkInputActions m_Wrapper;
        public PlayersActions(@PlayerNetworkInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @GasInput => m_Wrapper.m_Players_GasInput;
        public InputAction @BrakeInput => m_Wrapper.m_Players_BrakeInput;
        public InputAction @HandbrakeInput => m_Wrapper.m_Players_HandbrakeInput;
        public InputAction @NitroInput => m_Wrapper.m_Players_NitroInput;
        public InputAction @HorizontalInput => m_Wrapper.m_Players_HorizontalInput;
        public InputActionMap Get() { return m_Wrapper.m_Players; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayersActions set) { return set.Get(); }
        public void AddCallbacks(IPlayersActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayersActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayersActionsCallbackInterfaces.Add(instance);
            @GasInput.started += instance.OnGasInput;
            @GasInput.performed += instance.OnGasInput;
            @GasInput.canceled += instance.OnGasInput;
            @BrakeInput.started += instance.OnBrakeInput;
            @BrakeInput.performed += instance.OnBrakeInput;
            @BrakeInput.canceled += instance.OnBrakeInput;
            @HandbrakeInput.started += instance.OnHandbrakeInput;
            @HandbrakeInput.performed += instance.OnHandbrakeInput;
            @HandbrakeInput.canceled += instance.OnHandbrakeInput;
            @NitroInput.started += instance.OnNitroInput;
            @NitroInput.performed += instance.OnNitroInput;
            @NitroInput.canceled += instance.OnNitroInput;
            @HorizontalInput.started += instance.OnHorizontalInput;
            @HorizontalInput.performed += instance.OnHorizontalInput;
            @HorizontalInput.canceled += instance.OnHorizontalInput;
        }

        private void UnregisterCallbacks(IPlayersActions instance)
        {
            @GasInput.started -= instance.OnGasInput;
            @GasInput.performed -= instance.OnGasInput;
            @GasInput.canceled -= instance.OnGasInput;
            @BrakeInput.started -= instance.OnBrakeInput;
            @BrakeInput.performed -= instance.OnBrakeInput;
            @BrakeInput.canceled -= instance.OnBrakeInput;
            @HandbrakeInput.started -= instance.OnHandbrakeInput;
            @HandbrakeInput.performed -= instance.OnHandbrakeInput;
            @HandbrakeInput.canceled -= instance.OnHandbrakeInput;
            @NitroInput.started -= instance.OnNitroInput;
            @NitroInput.performed -= instance.OnNitroInput;
            @NitroInput.canceled -= instance.OnNitroInput;
            @HorizontalInput.started -= instance.OnHorizontalInput;
            @HorizontalInput.performed -= instance.OnHorizontalInput;
            @HorizontalInput.canceled -= instance.OnHorizontalInput;
        }

        public void RemoveCallbacks(IPlayersActions instance)
        {
            if (m_Wrapper.m_PlayersActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayersActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayersActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayersActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayersActions @Players => new PlayersActions(this);
    public interface IPlayersActions
    {
        void OnGasInput(InputAction.CallbackContext context);
        void OnBrakeInput(InputAction.CallbackContext context);
        void OnHandbrakeInput(InputAction.CallbackContext context);
        void OnNitroInput(InputAction.CallbackContext context);
        void OnHorizontalInput(InputAction.CallbackContext context);
    }
}
